// Code generated by hertz generator.

package oauth

import (
	"context"
	"hertz/demo/biz/model/hertz/oauth"
	"hertz/demo/internal/response"
	"hertz/demo/internal/utils"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
)

// GetToken .
// @Description	获取access token
// @Tags		oidc
// @Param		client_id		query	string	true	"oauth2 client_id"
// @Param		client_secret	query	string	true	"oauth2 client_secret"
// @Success		200
// @router		/v1/hertz/auth2/token [POST]
func GetToken(_ context.Context, c *app.RequestContext) {
	var req oauth.TokenReq
	if err := a.SetReqWithSub(c, &req).Error; err != nil {
		response.ErrorRequest(c, err)
		return
	}

	resp := new(oauth.CommonResp)

	c.JSON(consts.StatusOK, resp)
}

// GetJWKs .
// @Description	获取jwk公钥
// @Tags		oidc
// @Success		200
// @router		/v1/hertz/.well-known/jwks.json [GET]
func GetJWKs(_ context.Context, c *app.RequestContext) {
	jwks, err := utils.GetJWKPublic()
	if err != nil {
		response.ErrorUnknown(c, err, "get JWKs err")
		return
	}

	c.JSON(consts.StatusOK, jwks)
}
